SELECT * FROM EMP;

SELECT DEPTNO, COUNT(*) FROM EMP GROUP BY DEPTNO;

SELECT JOB, DEPTNO, MAX(SAL), MIN(SAL) FROM EMP GROUP BY JOB, DEPTNO;

SELECT DEPTNO, COUNT(*) FROM EMP 
WHERE DEPTNO = 20 
GROUP BY DEPTNO 
HAVING COUNT(*) >= 3;

SELECT DEPTNO, JOB, AVG(SAL) FROM EMP
WHERE SAL <= 3000
GROUP BY DEPTNO, JOB
HAVING AVG(SAL) >= 2000;

--JOIN
SELECT * FROM EMP E, DEPT D WHERE E.DEPTNO = D.DEPTNO;
--QJOIN
SELECT EMPNO, ENAME, DNAME, LOC FROM EMP E, DEPT D WHERE E.DEPTNO = D.DEPTNO;

SELECT * FROM EMP;
SELECT * FROM SALGRADE;
--비등가 조인
SELECT * FROM EMP E, SALGRADE S WHERE E.SAL BETWEEN S.LOSAL AND S.HISAL;

--자체 조인
--실습 8-8
SELECT * FROM EMP;
SELECT E1.EMPNO, E1.ENAME, E2.ENAME AS "메니저" FROM EMP E1, EMP E2 WHERE E1.MGR = E2.EMPNO;

--자체 JOIN, 같은 감독의 다른 영화를 찾아 주세요.
-- 영화제목, 감독
SELECT * FROM MOVIES;
SELECT M1.TITLE, M1.DIRECTOR FROM MOVIES M1, MOVIES M2 WHERE M1.DIRECTOR = M2.DIRECTOR AND M1.TITLE != M2.TITLE;
--같은 연속된 해에 개봉한 영화를 찾아서 출력해 줍니다.
--SELECT M1.TITLE, M1.DIRECTOR FROM MOVIES M1, MOVIES M2 WHERE M1.SUBSTR(RELEASE_DATE, 1, 2) = M2.SUBSTR(RELEASE_DATE, 1, 2);

-- LEFT OUTER JOIN
SELECT E1.EMPNO, E2.ENAME, E1.MGR, E2.EMPNO, E2.ENAME FROM EMP E1, EMP E2 WHERE E1.MGR = E2.EMPNO(+);
-- RIGHT OUTER JOIN
SELECT E1.EMPNO, E2.ENAME, E1.MGR, E2.EMPNO, E2.ENAME FROM EMP E1, EMP E2 WHERE E1.MGR(+) = E2.EMPNO;

--[SQL99]NATURAL JOIN
SELECT * FROM EMP E NATURAL JOIN DEPT D;

SELECT E.ENAME, DEPTNO, D.DNAME FROM EMP E NATURAL JOIN DEPT D;

--[SQL99] JOIN ~ USING
SELECT E.ENAME, DEPTNO, DNAME FROM EMP E JOIN DEPT D USING (DEPTNO);

--[SQL99] JOIN ~ ON
SELECT * FROM EMP E JOIN DEPT D ON (E.DEPTNO = D.DEPTNO);

--[SQL99] LEFT OUTER JOIN
SELECT E1.EMPNO, E1.ENAME, E1.MGR, E2.EMPNO, E2.ENAME FROM EMP E1 LEFT OUTER JOIN EMP E2 ON (E1.MGR = E2.EMPNO) ORDER BY E1.EMPNO;

--P239 
--Q1
SELECT D.DEPTNO, D.DNAME, E.EMPNO, E.ENAME, E.SAL  FROM EMP E, DEPT D WHERE E.DEPTNO = D.DEPTNO AND E.SAL > 2000 ORDER BY DEPTNO, SAL;
SELECT D.DEPTNO, D.DNAME, E.EMPNO, E.ENAME, E.SAL  FROM EMP E JOIN DEPT D ON (E.DEPTNO = D.DEPTNO) WHERE E.SAL > 2000 ORDER BY DEPTNO, SAL;
--Q2
SELECT * FROM EMP ORDER BY DEPTNO;
SELECT * FROM DEPT;
SELECT D.DEPTNO, D.DNAME, ROUND(AVG(SAL)), MAX(SAL), MIN(SAL), COUNT(*) 
FROM EMP E JOIN DEPT D ON (E.DEPTNO = D.DEPTNO)
GROUP BY D.DEPTNO, D.DNAME;
--Q3
SELECT DEPTNO, DNAME, EMPNO, ENAME, JOB, SAL FROM EMP E NATURAL JOIN DEPT D ORDER BY DEPTNO;
--Q4
SELECT * FROM DEPT;

--Q 서브쿼리를 사용하여 EMP테이블의 사원정보 중에서 사원이름 'ALLEN'인 사원의 추가수당(COMM) 보다 많은 추가 수당을 받는 사원의 이름을 출력해 주세요
SELECT ENAME, COMM FROM EMP
WHERE COMM > (SELECT COMM FROM EMP WHERE ENAME = 'ALLEN');

--Q 2015에 개봉한 드라마 장르 영화의 제목은?
SELECT * FROM MOVIES;
SELECT TITLE FROM MOVIES
WHERE SUBSTR(TO_CHAR(RELEASE_DATE),1, 2) = '15' AND GENRE IN ('드라마');

--Q P247 9-5 모든 직원들의 평균 급여(SAL)보다 많이 받는 20번 부서의 직원들을 알려주세요.
SELECT * FROM EMP;
SELECT * FROM DEPT;
SELECT EMPNO, ENAME, JOB, SAL, DEPTNO, DNAME, LOC
FROM EMP NATURAL JOIN DEPT
WHERE SAL > (SELECT AVG(SAL) FROM EMP) AND DEPTNO = 20;

-- IN 
SELECT * FROM EMP
WHERE DEPTNO IN (20, 30);

-- ANY
SELECT * FROM EMP
WHERE SAL = ANY (SELECT MAX(SAL) FROM EMP GROUP BY DEPTNO);
-- ALL
SELECT * FROM EMP
WHERE SAL > ALL (SELECT SAL FROM EMP WHERE DEPTNO = 30);

CREATE TABLE DEPT_TEMP
    AS SELECT * FROM DEPT;
    
SELECT * FROM DEPT_TEMP;
-- 삽입
INSERT INTO DEPT_TEMP (DEPTNO, DNAME, LOC)
VALUES (50, 'DATABASE', 'SEOUL');

INSERT INTO DEPT_TEMP (DEPTNO, DNAME, LOC)
VALUES (60, '설계', '대구');

INSERT INTO DEPT_TEMP
VALUES (70, '회로설계', '구미');

INSERT INTO DEPT_TEMP
VALUES (80, '철강구매', NULL);

SELECT * FROM DEPT_TEMP;
--저장
COMMIT;

--P272 빈 테이블 만들기
CREATE TABLE EMP_TEMP
    AS SELECT * FROM EMP WHERE 1 != 1;
    
SELECT * FROM EMP_TEMP;

-- 10-9
INSERT INTO EMP_TEMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO)
    VALUES (9999, '홍길동', 'PRESIDENT', NULL, '2001/01/01', 5000, 1000, 10);
SELECT * FROM EMP_TEMP;
-- 10 -10
INSERT INTO EMP_TEMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO)
    VALUES (1111, '성춘향', 'MANAGER', 9999, '2001-01-05', 4000, NULL, 20);
SELECT * FROM EMP_TEMP;
--10-12
INSERT INTO EMP_TEMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO)
    VALUES (2111, '이순신', 'MANAGER', 9999, TO_DATE('07/01/2001', 'DD/MM/YYYY'), 4000, NULL, 20);
SELECT * FROM EMP_TEMP;

CREATE TABLE DEPT_TEMP2
    AS SELECT * FROM DEPT;
UPDATE DEPT_TEMP2 SET LOC = 'SEOUL';
ROLLBACK;
SELECT * FROM DEPT_TEMP2;

-- 실습 10-18 테이블 테이터 중 일부만 수정
SELECT * FROM DEPT_TEMP2;

UPDATE DEPT_TEMP2
SET DNAME = 'DB', LOC = '서울' WHERE DEPTNO = 40;

--TABLE 삭제
DROP TABLE EMP_TEMP;
--TABLE COPY CREATE
CREATE TABLE EMP_TEMP
AS SELECT * FROM EMP;

SELECT * FROM EMP_TEMP ORDER BY SAL DESC;

-- EMP_TEMP 테이블의 사원중에서 급여가 2500 이하인 사원만 추가수당(COMM) 50으로 수정해 주세요.
SELECT * FROM EMP_TEMP;
UPDATE EMP_TEMP SET COMM = 50 WHERE SAL <= 2500;

SELECT * FROM EMP_TEMP;

DELETE FROM EMP_TEMP
WHERE EMPNO = 7369;

ROLLBACK;
COMMIT; -- 커밋하면 롤백도 안됨 ㅜㅜ

CREATE TABLE EMP_ALTER
    AS SELECT * FROM EMP;

SELECT * FROM EMP_ALTER;
--컬럼추가,
ALTER TABLE EMP_ALTER
ADD HP VARCHAR2(20);
--컬럼 이름 변경 RENAME
ALTER TABLE EMP_ALTER
RENAME COLUMN HP TO TEL;

DESC EMP_ALTER;
--컬럼 TYPE(자료형)을 변경 MODIFY
ALTER TABLE EMP_ALTER
MODIFY EMPNO NUMBER(6);

--컬럼을 삭제 DROP COLUMN
ALTER TABLE EMP_ALTER
DROP COLUMN TEL;

SELECT * FROM EMP_ALTER;
COMMIT;

--테이블의 이름 변경 RENAME
RENAME MEP_RENAME TO EMP_RENAME;
SELECT * FROM EMP_RENAME;

--P324 1~4


SELECT * FROM PERSON;
