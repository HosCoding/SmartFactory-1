SELECT '010-1111-1111', REPLACE('010-1111-1111', '-', '*') FROM DUAL;
SELECT ENAME, SAL, NVL(COMM, 0) FROM EMP;

SELECT ENAME, SAL, NVL2(COMM, TO_CHAR(COMM), 'X') FROM EMP;

--실습 6-47
SELECT EMPNO, ENAME, JOB, SAL,
    DECODE(JOB,
           'MANAGER', SAL * 1.1,
           'SALESMAN', SAL * 1.05,
           'ANALYST',  SAL,
           SAL * 1.03) AS UPSAL
FROM EMP;

--CASE문을 사용해 봅시다.
SELECT EMPNO, ENAME, JOB, SAL, 
        CASE JOB
            WHEN 'MANAGER' THEN SAL * 1.1
            WHEN 'SALESMAN' THEN SAL * 1.05
            WHEN 'ANALYST' THEN SAL
            ELSE SAL * 1.03
        END AS UPSAL
FROM EMP;

--P175 Q3
SELECT EMPNO, ENAME, TO_CHAR(HIREDATE, 'YYYY/MM/DD'), TO_CHAR(NEXT_DAY(ADD_MONTHS(HIREDATE, 3), '월요일'), 'YYYY/MM/DD') AS "R_ JOB", NVL2(COMM, TO_CHAR(COMM), 'N/A') AS COMM  FROM EMP;
--Q4
SELECT EMPNO, ENAME, NVL2(MGR, TO_CHAR(MGR), ' '),
        CASE
            WHEN MGR IS NULL THEN TO_CHAR('0000')
            WHEN SUBSTR(MGR, 1, 2) = 75 THEN TO_CHAR('5555')
            WHEN SUBSTR(MGR, 1, 2) = 76 THEN TO_CHAR('6666')
            WHEN SUBSTR(MGR, 1, 2) = 77 THEN TO_CHAR('7777')
            WHEN SUBSTR(MGR, 1, 2) = 78 THEN TO_CHAR('8888')
            ELSE TO_CHAR(MGR)
        END AS "CHG_MGR"
FROM EMP;

SELECT SUM(SAL) FROM EMP;
SELECT MAX(SAL) FROM EMP;
SELECT MIN(SAL) FROM EMP;
SELECT COUNT(SAL) FROM EMP;
SELECT ROUND(AVG(SAL), 2) FROM EMP;
--집합연산 다중행연산 묶어서처리하기
SELECT ROUND(AVG(SAL), 2) FROM EMP WHERE DEPTNO = 30;
----
SELECT DEPTNO, ROUND(AVG(SAL), 2) FROM EMP GROUP BY DEPTNO;

--부서별 급여의 합??
SELECT DEPTNO, SUM(SAL) FROM EMP GROUP BY DEPTNO;

--급여의 합계
SELECT SUM(DISTINCT SAL),
       SUM(ALL SAL),
       SUM(SAL)
FROM EMP;
----
SELECT COUNT(*) FROM EMP;
-- 부서별로 몇명이야?
SELECT DEPTNO, COUNT(*)FROM EMP GROUP BY DEPTNO ORDER BY DEPTNO ASC;

--부서번호가 20번인 사원들의 최대 급여(MAX)를 출력하세요.
SELECT MAX(SAL) FROM EMP WHERE DEPTNO = 20;
SELECT * FROM EMP WHERE DEPTNO = 20;

--날짜에 MAX가?? 최근 날짜
--부서번호가 20번인 직원 중 가장 최근에 입사한 사람은 몇일에 입사 하였나?
SELECT MAX(HIREDATE) FROM EMP WHERE DEPTNO = 20;
--부서번호가 20번인 직원 중 가장 옛날에 입사한 사람은 몇일에 입사 하였나?
SELECT MIN(HIREDATE) FROM EMP WHERE DEPTNO = 20;

-- HAVING절 GROUP BY 의 조건
SELECT DEPTNO, JOB, ROUND(AVG(SAL), 2) FROM EMP GROUP BY DEPTNO, JOB HAVING ROUND(AVG(SAL), 2) >= 2000 ORDER BY DEPTNO, JOB;

--WHERE절 HAVING절 같이 사용해 봅시다.다.
SELECT DEPTNO, JOB, AVG(SAL) FROM EMP WHERE SAL <= 3000 GROUP BY DEPTNO, JOB HAVING AVG(SAL) >= 2000 ORDER BY DEPTNO, JOB;

--P212연습문제 1번
SELECT DEPTNO, ROUND(AVG(SAL), 0), MAX(SAL), MIN(SAL), COUNT(SAL) FROM EMP GROUP BY DEPTNO;
--Q2
SELECT JOB, COUNT(*) FROM EMP GROUP BY JOB HAVING COUNT(*) >= 3;
--Q3
SELECT TO_CHAR(HIREDATE, 'YYYY'), DEPTNO, COUNT(*) AS CNT FROM EMP GROUP BY TO_CHAR(HIREDATE, 'YYYY'), DEPTNO ORDER BY TO_CHAR(HIREDATE, 'YYYY');
--Q4
SELECT NVL2(COMM, 'O', 'X') AS "EXIST_COMM", COUNT(*) AS "CNT" FROM EMP GROUP BY NVL2(COMM, 'O', 'X') ORDER BY COUNT(*) ASC;
--Q5
SELECT DEPTNO, TO_CHAR(HIREDATE, 'YYYY') AS "HIRE_YEAR", COUNT(*) AS "CNT", MAX(SAL), SUM(SAL), AVG(SAL) FROM EMP GROUP BY DEPTNO, TO_CHAR(HIREDATE, 'YYYY') ORDER BY DEPTNO;

-- MOVIES 테이블
SELECT * FROM MOVIES;
--Q1 장르별 영화 편수를 알려주세요.
SELECT GENRE, COUNT(*) AS "영화편수" FROM MOVIES GROUP BY GENRE ORDER BY COUNT(*) DESC;
--Q2 러닝 타임 130 이상인 영화의 제목은?
SELECT TITLE, RUNTIME FROM MOVIES WHERE RUNTIME >= 130 ORDER BY RUNTIME DESC;
--Q3 2015전과 2015후 영화는 몇 편인가?
SELECT SUM(
        CASE 
            WHEN TO_NUMBER(TO_CHAR(RELEASE_DATE, 'YY')) < 15 THEN 1 
            ELSE 0 
        END) AS "14이전",
        SUM(
         CASE
            WHEN TO_NUMBER(TO_CHAR(RELEASE_DATE, 'YY')) >= 15 THEN 1
            ELSE 0
        END) AS "15이후"
FROM MOVIES;
--Q4 평균 러닝 타임은 얼마인가?
SELECT AVG(RUNTIME) FROM MOVIES;
--Q5 가장 긴 영화와 가장 러닝 타임이 짧은 영화의 각각의 제목은? (9장 서브쿼리)
SELECT TITLE FROM MOVIES WHERE RUNTIME = (SELECT MAX(RUNTIME)FROM MOVIES) OR RUNTIME = (SELECT MIN(RUNTIME)FROM MOVIES) ;

--실습 7-35
SELECT DEPTNO, JOB, MAX(SAL) FROM EMP GROUP BY DEPTNO, JOB ORDER BY DEPTNO, JOB;
--실습 7-36
SELECT * FROM(SELECT DEPTNO, JOB, SAL FROM EMP) PIVOT(MAX(SAL) FOR DEPTNO IN (10, 20, 30)) ORDER BY JOB;
--실습 7-37 부서별 직책별 최고 급여를 2차원 표 형태로 출력하기
SELECT * FROM(SELECT JOB, DEPTNO, SAL FROM EMP)
    PIVOT(MAX(SAL) FOR JOB IN ('CLERK' AS CLERK, 'SALESMAN' AS SALESMAN, 'PRESIDENT' AS PRESIDENT, 'MANAGER' AS MANAGER, 'ANALYST' AS ANALYST)) ORDER BY DEPTNO;

--JOIN 테이블의 결합
SELECT * FROM EMP;
SELECT COUNT(*) FROM EMP; --12

SELECT * FROM DEPT;
SELECT * FROM EMP, DEPT;
SELECT COUNT(*) FROM EMP, DEPT;

SELECT * FROM EMP, DEPT WHERE EMP.DEPTNO = DEPT.DEPTNO;

--테이블 별칭 (실습 8-3)
SELECT * FROM EMP E, DEPT D WHERE E.DEPTNO = D.DEPTNO ORDER BY EMPNO;

SELECT * FROM EMP;
SELECT * FROM DEPT;

SELECT E.EMPNO, E.ENAME, D.DEPTNO, D.DNAME, D.LOC FROM EMP E, DEPT D WHERE E.DEPTNO = D.DEPTNO;

--실습 8-6
-- WHERE에 추가로 조건식 넣어 출력해 보겠습니다.
SELECT E.EMPNO, E.ENAME, E.SAL, D.DEPTNO, D.DNAME, D.LOC FROM EMP E, DEPT D WHERE E.DEPTNO = D.DEPTNO;
--급여가 2500이하이고 사원 번호가 7600 이하인 사원의 정보가 출력되도록 코드를 구현하세요.
-- EMP E, DEPT D
--P223 1분 복습
SELECT * FROM EMP E, DEPT D WHERE E.DEPTNO = D.DEPTNO AND E.SAL <= 2500 AND E.EMPNO < 7600;

SELECT * FROM MOVIES;
SELECT * FROM ACTORS;
SELECT * FROM MOVIE_ACTORS;

SELECT M.TITLE, A.NAME FROM MOVIES M, ACTORS A, MOVIE_ACTORS MA WHERE M.MOVIE_ID = MA.MOVIE_ID AND A.ACTOR_ID = MA.ACTOR_ID AND M.TITLE = '암살';
